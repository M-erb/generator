.gen_controls_wrap {

}

.submit {
  position: relative;
  height: 100px;
}
.submit_btn {
  position: absolute;
}
.genPushed {
  position: absolute;
}

.list_title_w-btn {
  display: flex;
  justify-content: flex-start;
  button {
    margin: 0 2em;
    align-self: baseline;
  }
}

//only works if adding or removing data from the ngRepeat after it is generated
.gen_results {
  transition: 1s linear all;
  -webkit-transition: 1s linear all;
  .ng-enter {
    opacity: 0;
  }
  .ng-enter.ng-enter-active {
    opacity: 1;
  }
  .ng-leave {
    opacity: 1;
  }
  .ng-leave.ng-leave-active {
    opacity: 0;
  }
}








/* Check mark*/
.mark {
  fill: none;
  stroke: rgb(202,202,202);
  stroke-miterlimit: 10;
  stroke-width: 10px;
}

.checkmark_container svg {
  width: 30px;
  height: 30px;
  display: block;
}

.circle {
  stroke-dasharray: 700;
  /*stroke-dashoffset: 700;*/
  stroke-dashoffset: 0;
}

.checkmark {
  stroke-dasharray: 150;
  /*stroke-dashoffset: 150;*/
  stroke-dashoffset: 0;
}

.checkmark_container svg .checked {
  stroke: #79be37;
}

/*.checkmark_container svg .checked.circle {
  -webkit-animation: 2.5s circleDraw forwards;
          animation: 2.5s circleDraw forwards;
}

.checkmark_container svg .checked.checkmark {
  -webkit-animation: 0.75s checkmarkDraw forwards;
          animation: 0.75s checkmarkDraw forwards;
  -webkit-animation-delay: 1s;
          animation-delay: 1s;
}*/

@-webkit-keyframes circleDraw {
  from {stroke-dashoffset: 700;}
  to {stroke-dashoffset: 0;}
}

@keyframes circleDraw {
  from {stroke-dashoffset: 700;}
  to {stroke-dashoffset: 0;}
}
@-webkit-keyframes checkmarkDraw {
  from {stroke-dashoffset: 150;}
  to {stroke-dashoffset: 0;}
}
@keyframes checkmarkDraw {
  from {stroke-dashoffset: 150;}
  to {stroke-dashoffset: 0;}
}
